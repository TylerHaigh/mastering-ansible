---

- hosts: loadbalancer
  become: true
  tasks:
    # Returns non-0 exit code if not running
    - name: verify nginx status
      command: service nginx status

    - name: verify nginx is listening on port 80
      wait_for: port=80 timeout=1

    # - name: verify nginx is listening on port 8080
    #   wait_for: port=8080 timeout=1



- hosts: webserver
  become: true
  tasks:
    - name: verify httpd status
      command: service httpd status

    - name: verify httpd is listening on port 80
      wait_for: port=80 timeout=1



- hosts: database
  become: true
  tasks:
    - name: verify mysqld status
      command: service mysqld status

    - name: verify mysqld is listening on port 3306
      wait_for: host={{ ansible_eth1.ipv4.address }} port=3306 timeout=1


- hosts: control
  tasks:
    - name: verify end-to-end response
      uri:
        url: http://{{item}}/demo
        return_content: yes
      with_items: "{{groups.loadbalancer}}"
      register: lb_index

    - debug:
        msg: "Response: {{item.content}}"
      with_items: "{{lb_index.results}}"

    - fail:
        msg: index failed to return content
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{lb_index.results}}"


    - name: verify end-to-end response
      uri:
        url: http://{{item}}/demo/db
        return_content: yes
      with_items: "{{groups.loadbalancer}}"
      register: lb_index

    - debug:
        msg: "Response: {{item.content}}"
      with_items: "{{lb_index.results}}"

    - fail:
        msg: index failed to return content
      when: "'Database Connected from' not in item.content"
      with_items: "{{lb_index.results}}"

- hosts: loadbalancer
  tasks:
    - name: verify backend response
      uri:
        url: http://{{item}}/demo
        return_content: yes
      with_items: "{{groups.webserver}}"
      register: app_index

    - debug:
        msg: "Response: {{item.content}}"
      with_items: "{{app_index.results}}"

    - fail:
        msg: index failed to return content
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{app_index.results}}"


    - name: verify backend response
      uri:
        url: http://{{item}}/demo/db
        return_content: yes
      with_items: "{{groups.webserver}}"
      register: app_index

    - debug:
        msg: "Response: {{item.content}}"
      with_items: "{{app_index.results}}"

    - fail:
        msg: index failed to return content
      when: "'Database Connected from' not in item.content"
      with_items: "{{app_index.results}}"

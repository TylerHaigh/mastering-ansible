---
# tasks file for mysql

- name: Install the libselinux-python package
  yum:
    name: libselinux-python
    state: present
  tags: [ 'packages' ]

- name: install tools
  yum:
    name: MySQL-python
    state: present
    update_cache: yes
  tags: [ 'packages' ]

- name: download mysql server rpm package
  yum:
    name: https://dev.mysql.com/get/mysql80-community-release-el6-2.noarch.rpm
    state: present
    update_cache: yes
  tags: [ 'packages' ]

- name: confirm rpm package was added
  shell: yum repolist all | grep mysql
  tags: [ 'packages' ]


# installs mysqld, mysql, mysqldump
- name: install mysql server
  yum:
    name: mysql-community-server
    state: present
    update_cache: yes
  tags: [ 'packages' ]

# If using vagrant, you need to use eth1, not eth0
- name: ensure mysql is listening on all ports
  lineinfile:
    dest: /etc/my.cnf
    regexp: ^bind-address
    line: "bind-address = {{ ansible_eth1.ipv4.address }}"
  notify: restart mysql
  tags: [ 'config', 'services' ]

# Always give the server a chance to reconfigure itself
# before restarting
- name: ensure mysql started
  service:
    name: mysqld
    state: started
    enabled: yes
  tags: [ 'services' ]

# at this point, you need to manually log into the server and run the commands listed in ../utils/mysql-commands.sh
# to change the root mysql password

- name: create database
  mysql_db:
    name: "{{ db_name }}"
    state: present
    login_host: "{{ db_login_host }}"
    login_user: "{{ db_login_user_name }}"
    login_password: "{{ db_login_user_password }}"
  tags: [ 'services', 'application' ]


# Broken: https://github.com/ansible/ansible/pull/52278
# - name: create demo database user
#   mysql_user:
#     name: "{{ db_user_name }}"
#     password: "{{ db_user_password }}"
#     priv: '"{{ db_name }}.*:ALL'"
#     # host: "{{ db_user_host }}"
#     state: present
#     login_host: "{{ db_login_host }}"
#     login_user: "{{ db_login_user_name }}"
#     login_password: "{{ db_login_user_password }}"

- name: open firewall ports
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 3306
    jump: ACCEPT
    comment: MySQL
    state: present
  notify: save iptables
  tags: [ 'services', 'config' ]

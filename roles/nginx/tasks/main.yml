---
# tasks file for nginx

- name: install nginx

  # https://docs.ansible.com/ansible/latest/modules/yum_module.html
  yum:
    name: nginx

    # "present" and "installed" will simply ensure that a desired package is installed.
    # "latest" will update the specified package if it's not of the latest available version.
    state: present

    # Enable a repo for the install/update operation.
    # These repos will not persist beyond the transaction
    enablerepo: epel

    # Force yum to check if cache is out of date and redownload if needed.
    # Has an effect only if state is present or latest.
    update_cache: yes
  tags: [ 'packages' ]


- name: Install the libselinux-python package
  yum:
    name: libselinux-python
    state: present
  tags: [ 'packages' ]

- name: get active sites
  shell: ls -1 /etc/nginx/conf.d | sed -e 's/\..*$//'
  register: active_sites
  tags: [ 'config', 'services' ]

- name: delete active sites
  file:
    path: /etc/nginx/conf.d/{{ item }}
    state: absent
  with_items: "{{ active_sites.stdout_lines }}"
  when: item not in sites
  notify: restart nginx
  tags: [ 'config', 'services' ]

- name: configure nginx site
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/conf.d/{{ item.key }}.conf
    mode: 0644
  with_dict: "{{ sites }}"
  notify: restart nginx
  tags: [ 'config', 'services', 'application' ]


# Give Ansible a chance to update the config
# before starting the service
- name: ensure nginx has started
  service:
    name: nginx
    state: started
    enabled: yes # Whether the service should start on boot
  tags: [ 'services' ]
